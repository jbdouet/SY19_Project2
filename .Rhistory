sigma_update <- sqrt(sum((Q_Value*(x-mu_update)^2)/sum(Q_Value)))
tmu <- abs(mu_update-mu)/mu
tpi <- abs(pi_update-pi)/pi
tsigma <- abs((sigma_update-sigma)/sigma)
mu <- mu_update
sigma <- sigma_update
pi <- pi_update
theta<-c(mu, sigma, pi)
tvec = c(tmu, tsigma,tpi)
if (tmu <0.001 && tpi <0.001 && tsigma < 0.001){
print(it)
return(theta)
}
it = it+1
}
}
a <- 2
mu <- 0
sigma <- 1
pi <- 0.4 # proportion de la loi normale dans le mélange
n <- 100
tirage <- sample(c(0,1), n, replace = TRUE, prob = c(pi,1-pi))
phi_sample <- rnorm(n, mean = mu , sd = sigma)
unif_sample <- runif(n, min = -a, max = a)
final_sample <- tirage*phi_sample + (1-tirage)* unif_sample
boxplot(final_sample)
EM <- function(x,mu,sigma,pi){
it =0
repeat{
Q_Value <- Q (x,mu,sigma,pi,a)
n <- length(x)
pi_update <- mean(Q_Value)
mu_update <- sum(Q_Value*x)/sum(Q_Value)
sigma_update <- sqrt(sum((Q_Value*(x-mu_update)^2)/sum(Q_Value)))
tmu <- abs(mu_update-mu)/mu
tpi <- abs(pi_update-pi)/pi
tsigma <- abs((sigma_update-sigma)/sigma)
mu <- mu_update
sigma <- sigma_update
pi <- pi_update
theta<-c(mu, sigma, pi)
tvec = c(tmu, tsigma,tpi)
if (tmu <0.001 && tpi <0.001 && tsigma < 0.001){
print(it)
return(theta)
}
it = it+1
}
}
x<- final_sample
EM(x,mu,sigma,pi)
EM <- function(x,mu,sigma,pi){
it =0
repeat{
Q_Value <- Q (x,mu,sigma,pi,a)
n <- length(x)
pi_update <- mean(Q_Value)
mu_update <- sum(Q_Value*x)/sum(Q_Value)
sigma_update <- sqrt(sum((Q_Value*(x-mu_update)^2)/sum(Q_Value)))
tmu <- abs(mu_update-mu)/mu
tpi <- abs(pi_update-pi)/pi
tsigma <- abs((sigma_update-sigma)/sigma)
mu <- mu_update
sigma <- sigma_update
pi <- pi_update
theta<-c(mu, sigma, pi)
tvec = c(tmu, tsigma,tpi)
err <- (pi_update-pi)^2+(sigma_update-sigma)^2+(pi_update-pi)^2
#if (tmu <0.001 && tpi <0.001 && tsigma < 0.001){
if (err <0.01){
print(it)
return(theta)
}
it = it+1
}
}
EM(x,mu,sigma,pi)
a <- 2
mu <- 0
sigma <- 1
pi <- 0.4 # proportion de la loi normale dans le mélange
n <- 100
EM <- function(x,mu,sigma,pi){
it =0
repeat{
Q_Value <- Q (x,mu,sigma,pi,a)
n <- length(x)
pi_update <- mean(Q_Value)
mu_update <- sum(Q_Value*x)/sum(Q_Value)
sigma_update <- sqrt(sum((Q_Value*(x-mu_update)^2)/sum(Q_Value)))
tmu <- abs(mu_update-mu)/mu
tpi <- abs(pi_update-pi)/pi
tsigma <- abs((sigma_update-sigma)/sigma)
mu <- mu_update
sigma <- sigma_update
pi <- pi_update
theta<-c(mu, sigma, pi)
tvec = c(tmu, tsigma,tpi)
err <- (pi_update-pi)^2+(sigma_update-sigma)^2+(pi_update-pi)^2
#if (tmu <0.001 && tpi <0.001 && tsigma < 0.001){
if (err <0.01){
print(it)
return(theta)
}
it = it+1
}
}
x<- final_sample
EM(x,mu,sigma,pi)
mu_init <- 0
sigma_init <- 0
pi_init <- 0
EM(x,mu_init,sigma_init,pi_init)
EM <- function(x,mu,sigma,pi){
it =0
repeat{
Q_Value <- Q (x,mu,sigma,pi,a)
n <- length(x)
pi_update <- mean(Q_Value)
mu_update <- sum(Q_Value*x)/sum(Q_Value)
sigma_update <- sqrt(sum((Q_Value*(x-mu_update)^2)/sum(Q_Value)))
tmu <- abs(mu_update-mu)/mu
tpi <- abs(pi_update-pi)/pi
tsigma <- abs((sigma_update-sigma)/sigma)
mu <- mu_update
sigma <- sigma_update
pi <- pi_update
theta<-c(mu, sigma, pi)
tvec = c(tmu, tsigma,tpi)
err <- (pi_update-pi)^2+(sigma_update-sigma)^2+(pi_update-pi)^2
#if (tmu <0.001 && tpi <0.001 && tsigma < 0.001){
if (err<0.01){
print(it)
return(theta)
}
it = it+1
}
}
x<- final_sample
mu_init <- 0
sigma_init <- 0
pi_init <- 0
EM(x,mu_init,sigma_init,pi_init)
EM <- function(x,mu,sigma,pi){
it =0
repeat{
Q_Value <- Q (x,mu,sigma,pi,a)
n <- length(x)
pi_update <- mean(Q_Value)
mu_update <- sum(Q_Value*x)/sum(Q_Value)
sigma_update <- sqrt(sum((Q_Value*(x-mu_update)^2)/sum(Q_Value)))
tmu <- abs(mu_update-mu)/mu
tpi <- abs(pi_update-pi)/pi
tsigma <- abs((sigma_update-sigma)/sigma)
mu <- mu_update
sigma <- sigma_update
pi <- pi_update
theta<-c(mu, sigma, pi)
tvec = c(tmu, tsigma,tpi)
err <- (pi_update-pi)^2+(sigma_update-sigma)^2+(pi_update-pi)^2
if (tmu <0.001 && tpi <0.001 && tsigma < 0.001){
#if (err<0.01){
print(it)
return(theta)
}
it = it+1
}
}
x<- final_sample
mu_init <- 0
sigma_init <- 0
pi_init <- 0
EM(x,mu_init,sigma_init,pi_init)
pi_init <- 1
EM(x,mu_init,sigma_init,pi_init)
EM <- function(x,mu,sigma,pi){
it =0
repeat{
Q_Value <- Q (x,mu,sigma,pi,a)
print(Q_Value)
pi_update <- mean(Q_Value)
mu_update <- sum(Q_Value*x)/sum(Q_Value)
sigma_update <- sqrt(sum((Q_Value*(x-mu_update)^2)/sum(Q_Value)))
tmu <- abs(mu_update-mu)/mu
tpi <- abs(pi_update-pi)/pi
tsigma <- abs((sigma_update-sigma)/sigma)
mu <- mu_update
sigma <- sigma_update
pi <- pi_update
theta<-c(mu, sigma, pi)
tvec = c(tmu, tsigma,tpi)
err <- (pi_update-pi)^2+(sigma_update-sigma)^2+(pi_update-pi)^2
#if (tmu <0.001 && tpi <0.001 && tsigma < 0.001){
if (err<0.01){
print(it)
return(theta)
}
it = it+1
}
}
x<- final_sample
mu_init <- 0
sigma_init <- 0
pi_init <- 1
EM(x,mu_init,sigma_init,pi_init)
a <- 2
EM(x,mu_init,sigma_init,pi_init,a)
EM <- function(x,mu,sigma,pi,a){
it =0
repeat{
Q_Value <- Q (x,mu,sigma,pi,a)
print(Q_Value)
pi_update <- mean(Q_Value)
mu_update <- sum(Q_Value*x)/sum(Q_Value)
sigma_update <- sqrt(sum((Q_Value*(x-mu_update)^2)/sum(Q_Value)))
tmu <- abs(mu_update-mu)/mu
tpi <- abs(pi_update-pi)/pi
tsigma <- abs((sigma_update-sigma)/sigma)
mu <- mu_update
sigma <- sigma_update
pi <- pi_update
theta<-c(mu, sigma, pi)
tvec = c(tmu, tsigma,tpi)
err <- (pi_update-pi)^2+(sigma_update-sigma)^2+(pi_update-pi)^2
#if (tmu <0.001 && tpi <0.001 && tsigma < 0.001){
if (err<0.01){
print(it)
return(theta)
}
it = it+1
}
}
x<- final_sample
mu_init <- 0
sigma_init <- 0
pi_init <- 1
a <- 2
EM(x,mu_init,sigma_init,pi_init,a)
Q(x,mu_init,sigma_init,pi_init,a)
pi_init <- 0.5
a <- 2
EM(x,mu_init,sigma_init,pi_init,a)
Q(x,mu_init,sigma_init,pi_init,a)
pi_init <- 0.7
a <- 2
Q(x,mu_init,sigma_init,pi_init,a)
mu_init <- 0
sigma_init <- 0
pi_init <- 0.7
Q(x,mu_init,sigma_init,pi_init,a)
pi_init <- 0.7
Q(x,mu_init,sigma_init,pi_init,a)
pi_init <- 0.2
Q(x,mu_init,sigma_init,pi_init,a)
EM(x,mu_init,sigma_init,pi_init,a)
a <- 20
Q(x,mu_init,sigma_init,pi_init,a)
Q(x,mu_init,sigma_init,pi_init,a)
Q <- function (x,mu,sigma,pi,a){
phi <-dnorm(x, mean = mu, sd = sigma, log = FALSE)
print (phi)
res <- (pi * phi)/ (phi*pi + (1-pi)*1/(2*a))
return(res)
}
Q(x,mu_init,sigma_init,pi_init,a)
x
x<- final_sample
sigma_init <- 0.1
pi_init <- 0.2
Q(x,mu_init,sigma_init,pi_init,a)
EM(x,mu_init,sigma_init,pi_init,a)
Q <- function (x,mu,sigma,pi,a){
phi <-dnorm(x, mean = mu, sd = sigma, log = FALSE)
res <- (pi * phi)/ (phi*pi + (1-pi)*1/(2*a))
return(res)
}
Q_Value <- Q (x,mu,sigma,pi,a)
EM <- function(x,mu,sigma,pi,a){
it =0
repeat{
Q_Value <- Q (x,mu,sigma,pi,a)
pi_update <- mean(Q_Value)
mu_update <- sum(Q_Value*x)/sum(Q_Value)
sigma_update <- sqrt(sum((Q_Value*(x-mu_update)^2)/sum(Q_Value)))
tmu <- abs(mu_update-mu)/mu
tpi <- abs(pi_update-pi)/pi
tsigma <- abs((sigma_update-sigma)/sigma)
mu <- mu_update
sigma <- sigma_update
pi <- pi_update
theta<-c(mu, sigma, pi)
tvec = c(tmu, tsigma,tpi)
err <- (pi_update-pi)^2+(sigma_update-sigma)^2+(pi_update-pi)^2
#if (tmu <0.001 && tpi <0.001 && tsigma < 0.001){
if (err<0.00001){
print(it)
return(theta)
}
it = it+1
}
}
x<- final_sample
mu_init <- 0
sigma_init <- 0.1
pi_init <- 0.2
a <- 20
EM(x,mu_init,sigma_init,pi_init,a)
EM <- function(x,mu,sigma,pi,a){
it =0
repeat{
Q_Value <- Q (x,mu,sigma,pi,a)
pi_update <- mean(Q_Value)
mu_update <- sum(Q_Value*x)/sum(Q_Value)
sigma_update <- sqrt(sum((Q_Value*(x-mu_update)^2)/sum(Q_Value)))
print(Q_Value)
tmu <- abs(mu_update-mu)/mu
tpi <- abs(pi_update-pi)/pi
tsigma <- abs((sigma_update-sigma)/sigma)
mu <- mu_update
sigma <- sigma_update
pi <- pi_update
theta<-c(mu, sigma, pi)
print(theta)
tvec = c(tmu, tsigma,tpi)
err <- (pi_update-pi)^2+(sigma_update-sigma)^2+(pi_update-pi)^2
#if (tmu <0.001 && tpi <0.001 && tsigma < 0.001){
#if (err<0.00001){
#  print(it)
#  return(theta)
#}
it = it+1
}
}
EM <- function(x,mu,sigma,pi,a){
it =0
repeat{
Q_Value <- Q (x,mu,sigma,pi,a)
pi_update <- mean(Q_Value)
mu_update <- sum(Q_Value*x)/sum(Q_Value)
sigma_update <- sqrt(sum((Q_Value*(x-mu_update)^2)/sum(Q_Value)))
print(Q_Value)
tmu <- abs(mu_update-mu)/mu
tpi <- abs(pi_update-pi)/pi
tsigma <- abs((sigma_update-sigma)/sigma)
err <- (pi_update-pi)^2+(sigma_update-sigma)^2+(pi_update-pi)^2
mu <- mu_update
sigma <- sigma_update
pi <- pi_update
theta<-c(mu, sigma, pi)
print(theta)
tvec = c(tmu, tsigma,tpi)
#if (tmu <0.001 && tpi <0.001 && tsigma < 0.001){
if (err<0.00001){
print(it)
return(theta)
}
it = it+1
}
}
x<- final_sample
mu_init <- 0
sigma_init <- 0.1
pi_init <- 0.2
a <- 20
EM(x,mu_init,sigma_init,pi_init,a)
EM <- function(x,mu,sigma,pi,a){
it =0
repeat{
Q_Value <- Q (x,mu,sigma,pi,a)
pi_update <- mean(Q_Value)
mu_update <- sum(Q_Value*x)/sum(Q_Value)
sigma_update <- sqrt(sum((Q_Value*(x-mu_update)^2)/sum(Q_Value)))
print(Q_Value)
tmu <- abs(mu_update-mu)/mu
tpi <- abs(pi_update-pi)/pi
tsigma <- abs((sigma_update-sigma)/sigma)
err <- (pi_update-pi)^2+(sigma_update-sigma)^2+(pi_update-pi)^2
mu <- mu_update
sigma <- sigma_update
print (pi)
pi <- pi_update
theta<-c(mu, sigma, pi)
print(theta)
tvec = c(tmu, tsigma,tpi)
#if (tmu <0.001 && tpi <0.001 && tsigma < 0.001){
if (err<0.00001){
print(it)
return(theta)
}
it = it+1
}
}
mu_init <- 0
sigma_init <- 0.1
pi_init <- 0.2
a <- 20
EM(x,mu_init,sigma_init,pi_init,a)
a <- 20
mu <- 0
sigma <- 1
pi <- 0.4 # proportion de la loi normale dans le mélange
n <- 100
tirage <- sample(c(0,1), n, replace = TRUE, prob = c(pi,1-pi))
phi_sample <- rnorm(n, mean = mu , sd = sigma)
unif_sample <- runif(n, min = -a, max = a)
final_sample <- tirage*phi_sample + (1-tirage)* unif_sample
boxplot(final_sample)
EM <- function(x,mu,sigma,pi,a){
it =0
repeat{
Q_Value <- Q (x,mu,sigma,pi,a)
pi_update <- mean(Q_Value)
mu_update <- sum(Q_Value*x)/sum(Q_Value)
sigma_update <- sqrt(sum((Q_Value*(x-mu_update)^2)/sum(Q_Value)))
tmu <- abs(mu_update-mu)/mu
tpi <- abs(pi_update-pi)/pi
tsigma <- abs((sigma_update-sigma)/sigma)
err <- (pi_update-pi)^2+(sigma_update-sigma)^2+(pi_update-pi)^2
mu <- mu_update
sigma <- sigma_update
print (pi)
pi <- pi_update
theta<-c(mu, sigma, pi)
print(theta)
tvec = c(tmu, tsigma,tpi)
#if (tmu <0.001 && tpi <0.001 && tsigma < 0.001){
if (err<0.00001){
print(it)
return(theta)
}
it = it+1
}
}
x<- final_sample
mu_init <- 0
sigma_init <- 0.1
pi_init <- 0.2
EM(x,mu_init,sigma_init,pi_init,a)
a <- 20
mu <- 0
sigma <- 1
pi <- 0.9 # proportion de la loi normale dans le mélange
n <- 100
tirage <- sample(c(0,1), n, replace = TRUE, prob = c(pi,1-pi))
phi_sample <- rnorm(n, mean = mu , sd = sigma)
unif_sample <- runif(n, min = -a, max = a)
final_sample <- tirage*phi_sample + (1-tirage)* unif_sample
boxplot(final_sample)
EM <- function(x,mu,sigma,pi,a){
it =0
repeat{
Q_Value <- Q (x,mu,sigma,pi,a)
pi_update <- mean(Q_Value)
mu_update <- sum(Q_Value*x)/sum(Q_Value)
sigma_update <- sqrt(sum((Q_Value*(x-mu_update)^2)/sum(Q_Value)))
tmu <- abs(mu_update-mu)/mu
tpi <- abs(pi_update-pi)/pi
tsigma <- abs((sigma_update-sigma)/sigma)
err <- (pi_update-pi)^2+(sigma_update-sigma)^2+(pi_update-pi)^2
mu <- mu_update
sigma <- sigma_update
print (pi)
pi <- pi_update
theta<-c(mu, sigma, pi)
print(theta)
tvec = c(tmu, tsigma,tpi)
#if (tmu <0.001 && tpi <0.001 && tsigma < 0.001){
if (err<0.00001){
print(it)
return(theta)
}
it = it+1
}
}
x<- final_sample
mu_init <- 0
sigma_init <- 0.1
pi_init <- 0.2
EM(x,mu_init,sigma_init,pi_init,a)
final_sample <- (1-tirage)*phi_sample + (tirage)* unif_sample
boxplot(final_sample)
EM <- function(x,mu,sigma,pi,a){
it =0
repeat{
Q_Value <- Q (x,mu,sigma,pi,a)
pi_update <- mean(Q_Value)
mu_update <- sum(Q_Value*x)/sum(Q_Value)
sigma_update <- sqrt(sum((Q_Value*(x-mu_update)^2)/sum(Q_Value)))
tmu <- abs(mu_update-mu)/mu
tpi <- abs(pi_update-pi)/pi
tsigma <- abs((sigma_update-sigma)/sigma)
err <- (pi_update-pi)^2+(sigma_update-sigma)^2+(pi_update-pi)^2
mu <- mu_update
sigma <- sigma_update
print (pi)
pi <- pi_update
theta<-c(mu, sigma, pi)
print(theta)
tvec = c(tmu, tsigma,tpi)
#if (tmu <0.001 && tpi <0.001 && tsigma < 0.001){
if (err<0.00001){
print(it)
return(theta)
}
it = it+1
}
}
x<- final_sample
mu_init <- 0
sigma_init <- 0.1
EM(x,mu_init,sigma_init,pi_init,a)
setwd("~/Documents/GI05/SY19/TPs/TP6/SY19_Project2")
